Done initializing mem and reg

Data Registers
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000

Instruction Memory
00000000000000000000000000000000

Data Memory
00000000000000000000000000000000


Read assembly file and convert to binary

Finished init of FileToBin
00101000110010000100000000000000
01001000110010100001000011100100
00110000110010000100000000000000
[u'00101000110010000100000000000000', u'01001000110010100001000011100100', u'00110000110010000100000000000000']
True

|---------------------------|
| Entering write back stage |
|---------------------------|

|-------------------------|
| Stalled memory stage |
|-------------------------|

|-------------------------|
| Stalled execute stage |
|-------------------------|

|-------------------------|
| Stalled decode stage |
|-------------------------|

|-------------------------|
| Stalled fetch stage |
|-------------------------|




True

|---------------------------|
| Entering write back stage |
|---------------------------|

|-----------------------|
| Entering memory stage |
|-----------------------|

|------------------------|
| Entering execute stage |
|------------------------|

|-----------------------|
| Entering decode stage |
|-----------------------|
('Complete Instruction:', u'noop,$0,$0,$0')

|----------------------|
| Entering fetch stage |
|----------------------|
('Stack_ptr: ', 0)
('inst_reg: ', '00101000110010000100000000000000')




True

|---------------------------|
| Entering write back stage |
|---------------------------|

|-----------------------|
| Entering memory stage |
|-----------------------|

|------------------------|
| Entering execute stage |
|------------------------|

|-----------------------|
| Entering decode stage |
|-----------------------|
('Complete Instruction:', u'add,$3,$4,$4')

|----------------------|
| Entering fetch stage |
|----------------------|
('Stack_ptr: ', 1)
('inst_reg: ', '01001000110010100001000011100100')




True

|---------------------------|
| Entering write back stage |
|---------------------------|

|-----------------------|
| Entering memory stage |
|-----------------------|

|------------------------|
| Entering execute stage |
|------------------------|
In the add constructor
add$3$4$4

|-----------------------|
| Entering decode stage |
|-----------------------|
('Complete Instruction:', u'addi,$3,$5,#2162')

|----------------------|
| Entering fetch stage |
|----------------------|
('Stack_ptr: ', 2)
('inst_reg: ', '00110000110010000100000000000000')




False
('to_end = ', 4)

|---------------------------|
| Entering write back stage |
|---------------------------|

|-----------------------|
| Entering memory stage |
|-----------------------|

|------------------------|
| Entering execute stage |
|------------------------|
In the addi constructor
addi$3$5$1

|-----------------------|
| Entering decode stage |
|-----------------------|
('Complete Instruction:', u'sub,$3,$4,$4')

|----------------------|
| Entering fetch stage |
|----------------------|
('Stack_ptr: ', 3)
('inst_reg: ', '00000000000000000000000000000000')




False
('to_end = ', 3)

|---------------------------|
| Entering write back stage |
|---------------------------|

|-----------------------|
| Entering memory stage |
|-----------------------|

|------------------------|
| Entering execute stage |
|------------------------|
In the sub constructor
sub$3$4$4

|-----------------------|
| Entering decode stage |
|-----------------------|
('Complete Instruction:', u'noop,$0,$0,$0')

|----------------------|
| Entering fetch stage |
|----------------------|
('Stack_ptr: ', 4)
('inst_reg: ', '00000000000000000000000000000000')




False
('to_end = ', 2)

|---------------------------|
| Entering write back stage |
|---------------------------|

|-----------------------|
| Entering memory stage |
|-----------------------|

|------------------------|
| Entering execute stage |
|------------------------|

|-----------------------|
| Entering decode stage |
|-----------------------|
('Complete Instruction:', u'noop,$0,$0,$0')

|----------------------|
| Entering fetch stage |
|----------------------|
('Stack_ptr: ', 5)
('inst_reg: ', '00000000000000000000000000000000')




False
('to_end = ', 1)

|---------------------------|
| Entering write back stage |
|---------------------------|

|-----------------------|
| Entering memory stage |
|-----------------------|

|------------------------|
| Entering execute stage |
|------------------------|

|-----------------------|
| Entering decode stage |
|-----------------------|
('Complete Instruction:', u'noop,$0,$0,$0')

|----------------------|
| Entering fetch stage |
|----------------------|
('Stack_ptr: ', 6)
('inst_reg: ', '00000000000000000000000000000000')




False
('to_end = ', 0)

|---------------------------|
| Entering write back stage |
|---------------------------|

|-----------------------|
| Entering memory stage |
|-----------------------|

|------------------------|
| Entering execute stage |
|------------------------|

|-----------------------|
| Entering decode stage |
|-----------------------|
('Complete Instruction:', u'noop,$0,$0,$0')

|----------------------|
| Entering fetch stage |
|----------------------|
('Stack_ptr: ', 7)
('inst_reg: ', '00000000000000000000000000000000')




